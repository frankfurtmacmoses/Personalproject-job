AWSTemplateFormatVersion: 2010-09-09
Description: "Watchmen monitors the saas account for issues and outages."
Mappings:
  EnvMap:
    test:
      Bucket: cyber-intel-saas-test
      BuildFile: watchmen-saas-lambdas-test.zip
    prod:
      Bucket: ib-cyberint-prod-deploys
      BuildFile: watchmen-lambdas-prod.zip
Parameters:
  Env:
    Description: Environment to be deployed.
    Type: String
  BuildsPrefix:
    Description: The S3 prefix that contains the Watchmen builds.
    Type: String
  Account:
    Description: AWS account to be deployed in (eg. atg)
    Type: String
Conditions:
  IsProd: !Equals [ !Ref Env, prod ]
Resources:
  WatchmenRorschachLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub ${AWS::StackName}-Rorschach
      Runtime: python3.7
      Code:
        S3Bucket: !FindInMap [EnvMap, !Ref Env, Bucket]
        S3Key: !Join ["/", [!Ref BuildsPrefix, !FindInMap [EnvMap, !Ref Env, BuildFile]]]
      Description: Monitors s3 targets hourly and daily.
      Environment:
        Variables:
          ENVIRONMENT: !Ref Env
          ACCOUNT: !Ref Account
          TARGET_ACCOUNT: saas   # This is necessary in order to find the correct targets file. Definitely hacky.
      Handler: watchmen.main_saas.start_rorschach_watcher
      MemorySize: 256
      Role: !GetAtt RorschachSaasExecutionRole.Arn
      Timeout: 300
      Tags:
        - Key: Owner
          Value: CyberIntel
        - Key: Product
          Value: watchmen
        - Key: Protected
          Value: 'TRUE'
        - Key: Component
          Value: lambda
        - Key: Name
          Value: watchmen-rorschach
        - Key: Env
          Value: !Ref Env
  RorschachHourlyScheduledEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: A hourly event that kicks off hourly Rorschach Watchman
      ScheduleExpression: cron(0 * * * ? *)
      State: !If [ IsProd, ENABLED, DISABLED ]
      Targets:
        - Id: RorschachHourlyScheduler
          Arn: !GetAtt WatchmenRorschachLambda.Arn
          Input: '{"Type": "Hourly"}'
  RorschachDailyScheduledEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: A daily event that kicks off daily Rorschach Watchman
      ScheduleExpression: cron(0 15 * * ? *)
      State: !If [ IsProd, ENABLED, DISABLED ]
      Targets:
        - Id: RorschachDailyScheduler
          Arn: !GetAtt WatchmenRorschachLambda.Arn
          Input: '{"Type": "Daily"}'
  RorschachMinutelyScheduledEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: A minutely event that kicks off the Rorschach Watchman every 15 minutes
      ScheduleExpression: cron(0/15 * * * ? *)
      State: !If [ IsProd, ENABLED, DISABLED ]
      Targets:
        - Id: RorschachMinutelyScheduler
          Arn: !GetAtt WatchmenRorschachLambda.Arn
          Input: '{"Type": "Minutely"}'
  InvokeRorschachHourlyLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt WatchmenRorschachLambda.Arn
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt RorschachHourlyScheduledEvent.Arn
  InvokeRorschachDailyLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt WatchmenRorschachLambda.Arn
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt RorschachDailyScheduledEvent.Arn
  InvokeRorschachMinutelyLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt WatchmenRorschachLambda.Arn
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt RorschachMinutelyScheduledEvent.Arn
  RorschachSaasExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub RorschachSaasExecutionRole-${Env}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: !Sub RorschachSaasExecutionRole-${Env}
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'SNS:Publish'
                Resource:
                    - !If [IsProd, "arn:aws:sns:us-east-1:902917483333:Poseidon_Northstar_DNS_Data", "arn:aws:sns:us-east-1:405093580753:Watchmen_Test"]
                    - !If [IsProd, "arn:aws:sns:us-east-1:902917483333:Poseidon_DNS_Data", "arn:aws:sns:us-east-1:405093580753:Watchmen_Test"]
                    - !If [IsProd, "arn:aws:sns:us-east-1:902917483333:Generic_S3_Rorschach", "arn:aws:sns:us-east-1:405093580753:Watchmen_Test"]
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                Resource:
                  Fn::If:
                    - IsProd
                    - - "arn:aws:s3:::deteque-new-observable-data"
                      - "arn:aws:s3:::ib-customer-data-usa-va"
                      - "arn:aws:s3:::ib-cyberint-prod-deploys"
                      - "arn:aws:s3:::ib-dl-lz-ttl-prod"
                      - "arn:aws:s3:::ib-dl-saas-cz-prod"
                      - "arn:aws:s3:::ib-dl-saas-lz-dev-tmp"
                      - "arn:aws:s3:::ib-dl-saas-lz-prod"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod"
                    - "arn:aws:s3:::cyber-intel-saas-test"
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:HeadBucket'
                Resource:
                  Fn::If:
                    - IsProd
                    - - "arn:aws:s3:::deteque-new-observable-data/NewlyObservedDomains/*"
                      - "arn:aws:s3:::deteque-new-observable-data/NewlyObservedHostname/*"
                      - "arn:aws:s3:::ib-customer-data-usa-va/parquet-dns/com.infoblox.300224/*"
                      - "arn:aws:s3:::ib-customer-data-usa-va/parquet-northstar-dns/com.infoblox.300224/*"
                      - "arn:aws:s3:::ib-cyberint-prod-deploys/watchmen/*"
                      - "arn:aws:s3:::ib-dl-lz-ttl-prod/ib-dl-saas-lz-prod/heka/*"
                      - "arn:aws:s3:::ib-dl-lz-ttl-prod/ib-dl-saas-lz-prod/prometheus/metrics-prd-1/*"
                      - "arn:aws:s3:::ib-dl-saas-cz-prod/heka/*"
                      - "arn:aws:s3:::ib-dl-saas-cz-prod/dns-logs/customer/*"
                      - "arn:aws:s3:::ib-dl-saas-cz-prod/dns-logs/farsight/*"
                      - "arn:aws:s3:::ib-dl-saas-cz-prod/saas-customer-data/*"
                      - "arn:aws:s3:::ib-dl-saas-cz-prod/athena-full-exports/*"
                      - "arn:aws:s3:::ib-dl-saas-cz-prod/prometheus/*"
                      - "arn:aws:s3:::ib-dl-saas-lz-dev-tmp/saas-customer-data/*"
                      - "arn:aws:s3:::ib-dl-saas-lz-prod/athena-full-exports/atcapi/*"
                      - "arn:aws:s3:::ib-dl-saas-lz-prod/athena-full-exports/identity/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/summaries/customer/name_servers/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/customer/metadata/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/customer/summaries/qtype_answer_counts/qtype=1/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/customer/summaries/subdomain_counts_by_sld/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/customer/summaries/subdomain_counts_by_source/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/farsight/metadata/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/farsight/summaries/name_servers/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/farsight/summaries/qtype_answer_counts/qtype=1/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/farsight/summaries/query_counts/*"
                      - "arn:aws:s3:::ib-dl-saas-rz-prod/dns-logs/farsight/summaries/subdomain_counts_by_sld/*"
                    - "arn:aws:s3:::cyber-intel-saas-test/*"

